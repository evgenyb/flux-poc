apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: azureassignedidentities.aadpodidentity.k8s.io
spec:
  group: aadpodidentity.k8s.io
  names:
    kind: AzureAssignedIdentity
    plural: azureassignedidentities
  scope: Namespaced
  version: v1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: azureidentities.aadpodidentity.k8s.io
spec:
  group: aadpodidentity.k8s.io
  names:
    kind: AzureIdentity
    plural: azureidentities
    singular: azureidentity
  scope: Namespaced
  version: v1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: azureidentitybindings.aadpodidentity.k8s.io
spec:
  group: aadpodidentity.k8s.io
  names:
    kind: AzureIdentityBinding
    plural: azureidentitybindings
  scope: Namespaced
  version: v1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: azurepodidentityexceptions.aadpodidentity.k8s.io
spec:
  group: aadpodidentity.k8s.io
  names:
    kind: AzurePodIdentityException
    plural: azurepodidentityexceptions
    singular: azurepodidentityexception
  scope: Namespaced
  version: v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aad-pod-id-mic-service-account
  namespace: msi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aad-pod-id-nmi-service-account
  namespace: msi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aad-pod-id-mic-role
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - get
  - update
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azureidentitybindings
  - azureidentities
  verbs:
  - get
  - list
  - watch
  - post
  - update
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azurepodidentityexceptions
  verbs:
  - list
  - update
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azureassignedidentities
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aad-pod-id-nmi-role
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azureidentitybindings
  - azureidentities
  - azurepodidentityexceptions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azureassignedidentities
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: aad-pod-id-mic-binding
  name: aad-pod-id-mic-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aad-pod-id-mic-role
subjects:
- kind: ServiceAccount
  name: aad-pod-id-mic-service-account
  namespace: msi
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: aad-pod-id-nmi-binding
  name: aad-pod-id-nmi-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aad-pod-id-nmi-role
subjects:
- kind: ServiceAccount
  name: aad-pod-id-nmi-service-account
  namespace: msi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: mic
    k8s-app: aad-pod-id
  name: mic
  namespace: msi
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mic
      component: mic
  template:
    metadata:
      labels:
        app: mic
        component: mic
    spec:
      containers:
      - args:
        - --cloudconfig=/etc/kubernetes/azure.json
        - --logtostderr
        env:
        - name: MIC_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: mcr.microsoft.com/k8s/aad-pod-identity/mic:1.6.2
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        name: mic
        resources:
          limits:
            cpu: 200m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/kubernetes/azure.json
          name: k8s-azure-file
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: aad-pod-id-mic-service-account
      volumes:
      - hostPath:
          path: /etc/kubernetes/azure.json
        name: k8s-azure-file
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    component: nmi
    k8s-app: aad-pod-id
    tier: node
  name: nmi
  namespace: msi
spec:
  selector:
    matchLabels:
      component: nmi
      tier: node
  template:
    metadata:
      labels:
        component: nmi
        tier: node
    spec:
      containers:
      - args:
        - --node=$(NODE_NAME)
        - --http-probe-port=8085
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: mcr.microsoft.com/k8s/aad-pod-identity/nmi:1.6.2
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8085
          initialDelaySeconds: 10
          periodSeconds: 5
        name: nmi
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: iptableslock
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: aad-pod-id-nmi-service-account
      volumes:
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: iptableslock
  updateStrategy:
    type: RollingUpdate
